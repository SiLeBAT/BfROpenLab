/*******************************************************************************
 * Copyright (c) 2018 German Federal Institute for Risk Assessment (BfR)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contributors:
 *     Department Biological Safety - BfR
 *******************************************************************************/
/**
 * This class is generated by jOOQ
 */
package de.bund.bfr.knime.openkrise.db.generated.public_.tables.records;


import de.bund.bfr.knime.openkrise.db.generated.public_.tables.Extrafields;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExtrafieldsRecord extends TableRecordImpl<ExtrafieldsRecord> implements Record4<String, Integer, String, String> {

	private static final long serialVersionUID = 1491457561;

	/**
	 * Setter for <code>PUBLIC.ExtraFields.tablename</code>.
	 */
	public void setTablename(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ExtraFields.tablename</code>.
	 */
	public String getTablename() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ExtraFields.id</code>.
	 */
	public void setId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ExtraFields.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.ExtraFields.attribute</code>.
	 */
	public void setAttribute(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.ExtraFields.attribute</code>.
	 */
	public String getAttribute() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.ExtraFields.value</code>.
	 */
	public void setValue(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.ExtraFields.value</code>.
	 */
	public String getValue() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Extrafields.EXTRAFIELDS.TABLENAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Extrafields.EXTRAFIELDS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Extrafields.EXTRAFIELDS.ATTRIBUTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Extrafields.EXTRAFIELDS.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getTablename();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAttribute();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExtrafieldsRecord value1(String value) {
		setTablename(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExtrafieldsRecord value2(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExtrafieldsRecord value3(String value) {
		setAttribute(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExtrafieldsRecord value4(String value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExtrafieldsRecord values(String value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExtrafieldsRecord
	 */
	public ExtrafieldsRecord() {
		super(Extrafields.EXTRAFIELDS);
	}

	/**
	 * Create a detached, initialised ExtrafieldsRecord
	 */
	public ExtrafieldsRecord(String tablename, Integer id, String attribute, String value) {
		super(Extrafields.EXTRAFIELDS);

		setValue(0, tablename);
		setValue(1, id);
		setValue(2, attribute);
		setValue(3, value);
	}
}
